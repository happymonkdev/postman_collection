{
	"info": {
		"_postman_id": "f9fbe359-6ab4-4a65-b5c1-feb4ae5cf60c",
		"name": "KIBO Quartz Server",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Get All Quartz Jobs",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "1cd156c2-3c91-4135-9042-0e2f6dd441ac",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "608cd2aa-2e7d-4c2a-83d9-499ffa8f30be",
						"exec": [
							"var jsonData ;",
							"pm.test(\"GetAll job api Status code expected 200\", function () {",
							"    jsonData = pm.response.json();",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"if(data === undefined || Object.keys(data).length<1)",
							"{",
							"    tests[\"Test script failed to get input data to test 'JobNames\"]  =  false;",
							"}",
							"",
							"if (jsonData===undefined || (Object.keys(data).length !== Object.keys(jsonData).length))",
							"{",
							"console.log(\"job names configured to test \"+JSON.stringify(data));",
							"console.log(\"API response \"+JSON.stringify(jsonData));",
							"tests[\"Number of JobNames differ from api response .. please check logs\"]  =  false;",
							"}",
							"else {",
							"    var count =0;",
							"    Object.keys(data).forEach(function(x) {",
							"    count++;",
							"tests[\"JobName expected to be same to test \"] = jsonData.some(obj => ",
							"     {    console.log(\"job name from api response \"+obj.jobName);",
							"          console.log(\"job name from configured test data \"+data[x]);",
							"          return obj.jobName === data[x]",
							"     });",
							"    console.log(\"count -->\"+count);",
							"});",
							"}",
							"",
							"",
							"",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Cache-Control",
						"value": " no-cache",
						"type": "text"
					},
					{
						"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
						"key": "Authorization",
						"value": "Basic {{basicAuth}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://{{base-url}}/quartz/jobs",
					"protocol": "http",
					"host": [
						"{{base-url}}"
					],
					"path": [
						"quartz",
						"jobs"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get All Quartz Jobs InvalidAuth",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "1cd156c2-3c91-4135-9042-0e2f6dd441ac",
						"exec": [
							"",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "608cd2aa-2e7d-4c2a-83d9-499ffa8f30be",
						"exec": [
							"",
							"pm.test(\"Authorization is invalid so status code expected is 401\", function () {",
							"    pm.response.to.have.status(401);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Cache-Control",
						"type": "text",
						"value": " no-cache"
					},
					{
						"key": "Authorization",
						"type": "text",
						"value": "Basic jkhjkk",
						"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman."
					}
				],
				"url": {
					"raw": "http://{{base-url}}/quartz/jobs",
					"protocol": "http",
					"host": [
						"{{base-url}}"
					],
					"path": [
						"quartz",
						"jobs"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get All Quartz Jobs AuthMissing",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "1cd156c2-3c91-4135-9042-0e2f6dd441ac",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "608cd2aa-2e7d-4c2a-83d9-499ffa8f30be",
						"exec": [
							"",
							"pm.test(\"Authorization is missing so status code expected is 401\", function () {",
							"    pm.response.to.have.status(401);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Cache-Control",
						"type": "text",
						"value": " no-cache"
					},
					{
						"key": "Authorization",
						"type": "text",
						"value": "Basic {{basicAuth}}",
						"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
						"disabled": true
					}
				],
				"url": {
					"raw": "http://{{base-url}}/quartz/jobs",
					"protocol": "http",
					"host": [
						"{{base-url}}"
					],
					"path": [
						"quartz",
						"jobs"
					]
				}
			},
			"response": []
		},
		{
			"name": "Start Quartz Scheduler",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "db6a12f2-31f6-46c8-9c7c-c04bb82ae13c",
						"exec": [
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Start Quartz Response body expected to be true\", function () {",
							"    pm.response.to.have.body(\"true\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "basic {{basicAuth}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://{{base-url}}/quartz/start",
					"protocol": "http",
					"host": [
						"{{base-url}}"
					],
					"path": [
						"quartz",
						"start"
					]
				}
			},
			"response": []
		},
		{
			"name": "Stop Quartz Scheduler",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d9e12703-23b5-40f3-8b62-cdc49fbd093b",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Stop Quartz Response body expected to be true\", function () {",
							"    pm.response.to.have.body(\"true\");",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "a359f78b-6167-407e-adfa-81a53ade5cf4",
						"exec": [
							" //postman.setGlobalVariable(\"Authorization\", \"X-Temp-Authorization\")",
							" //console.log(\"---> --> \"+pm.globals.get('Authorization'));",
							" var Header = require('postman-collection').Header;",
							" var header = new Header({",
							"        key: 'Content-Type',",
							"        value: 'application/xml'",
							"    });",
							"",
							"console.log(\"--> \" + header.toString()) // prints the string representation of the Header.",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "basic {{basicAuth}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://{{base-url}}/quartz/stop",
					"protocol": "http",
					"host": [
						"{{base-url}}"
					],
					"path": [
						"quartz",
						"stop"
					]
				}
			},
			"response": []
		},
		{
			"name": "Quartz Server Health Check",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "5b789fd2-0aca-4e3c-b525-b6283674b606",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Health Check Quartz Response body expected to be false\", function () {",
							"    pm.response.to.have.body(\"false\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "basic {{basicAuth}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://{{base-url}}/quartz/health",
					"protocol": "http",
					"host": [
						"{{base-url}}"
					],
					"path": [
						"quartz",
						"health"
					]
				}
			},
			"response": []
		},
		{
			"name": "Quartz Server Health Check AuthMissing",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "5b789fd2-0aca-4e3c-b525-b6283674b606",
						"exec": [
							"var v = pm.globals.get(\"basicAuth1\");",
							"pm.globals.set(\"basicAuth\", v);",
							"console.log(\"now setting again basicAuth = \"+ v);",
							"pm.test(\"Authorization is missing so status code expected is 401\", function () {",
							"    pm.response.to.have.status(401);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "edbee5ce-a1f3-44e3-a3d1-396143e22079",
						"exec": [
							"var v = pm.globals.get(\"basicAuth\");",
							"pm.globals.set(\"basicAuth1\", v);",
							"pm.globals.unset(\"basicAuth\");",
							"console.log(\"basicAuth is unset and now setting basicAuth1 -> \"+ v);",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"type": "text",
						"value": "basic {{basicAuth}}"
					}
				],
				"url": {
					"raw": "http://{{base-url}}/quartz/health",
					"protocol": "http",
					"host": [
						"{{base-url}}"
					],
					"path": [
						"quartz",
						"health"
					]
				}
			},
			"response": []
		}
	]
}